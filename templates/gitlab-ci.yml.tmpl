# This file was initially generated by dredger, but feel free to adapt it to your needs and environment
stages:
  - build
  - publish-single-arch
  - publish-multi-arch

# to switch to multi-arch remove the dots and rename build-prod to .build-prod
.image-amd:
  stage: publish-multi-arch
  rules:
    - exists:
        - $CI_PROJECT_DIR/image-manifest.yml
        - $CI_PROJECT_DIR/Dockerfile
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  tags:
    - i86
  image: 
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --build-arg "ARCH=amd64"
      --build-arg DEPENDENCY_TRACK_PROJECT=$PROJECT
      --build-arg DEPENDENCY_TRACK_TOKEN=$TOKEN
      --custom-platform=linux/amd64
      --destination $CI_REGISTRY_IMAGE:amd64-`cat version`

.image-arm:
  stage: publish-multi-arch
  rules:
    - exists:
        - $CI_PROJECT_DIR/Dockerfile
        - $CI_PROJECT_DIR/image-manifest.yml
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  tags:
    - arm64
  image: 
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --build-arg "ARCH='arm64v8'"
      --custom-platform=linux/arm64v8
      --destination $CI_REGISTRY_IMAGE:arm64-`cat version`

.multi-arch:
  image:
    name: curlimages/curl:latest
    entrypoint: [""]
  stage: publish-multi-arch
  rules:
    - exists:
        - $CI_PROJECT_DIR/image-manifest.yml
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  needs: ["image-amd","image-arm"]
  before_script:
    - PROJECT="https://github.com/estesp/manifest-tool"
    - VERSION="2.0.6"
    - ARTIFACT="manifest-tool-linux-amd64"
    - URL="$PROJECT/releases/download/v$VERSION/binaries-manifest-tool-$VERSION.tar.gz"
    - curl -L -o binaries-manifest-tool.tar.gz $URL
    - tar -xf binaries-manifest-tool.tar.gz
    - mv manifest-tool-linux-amd64 manifest-tool
    - chmod +x manifest-tool
  script:
    - ./manifest-tool
        --username $CI_REGISTRY_USER
        --password $CI_REGISTRY_PASSWORD
        push from-spec image-manifest.yml

build-prod:
  stage: publish-single-arch
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    PROJECT: $CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
    TOKEN: $DEPENDENCY_TRACK_TOKEN
  rules:
    - exists:
        - $CI_PROJECT_DIR/Dockerfile
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
  script:
    - echo "push container image"
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --build-arg DEPENDENCY_TRACK_PROJECT=$PROJECT
      --build-arg DEPENDENCY_TRACK_TOKEN=$TOKEN
      --build-arg ARCH=`echo $CI_RUNNER_EXECUTABLE_ARCH|cut -d'/' -f2`
      --insecure
      --single-snapshot
      --destination $CI_REGISTRY_IMAGE:`cat version`

build-staging:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  rules:
    - exists:
        - $CI_PROJECT_DIR/Dockerfile
    - if: $CI_COMMIT_BRANCH == "staging"
      when: always
  script:
    - echo "push container image"
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --build-arg ARCH=`echo $CI_RUNNER_EXECUTABLE_ARCH|cut -d'/' -f2`
      --insecure
      --single-snapshot
      --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH-`cat version`

build-dev:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    PROJECT: $CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
    TOKEN: $DEPENDENCY_TRACK_TOKEN
  rules:
    - exists:
        - $CI_PROJECT_DIR/Dockerfile
    - if: '$CI_COMMIT_BRANCH == "development" && $CI_PIPELINE_SOURCE == "push"'
      when: always
  script:
    - echo "push container image"
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --build-arg DEPENDENCY_TRACK_PROJECT=$PROJECT
      --build-arg DEPENDENCY_TRACK_TOKEN=$TOKEN
      --build-arg ARCH=`echo $CI_RUNNER_EXECUTABLE_ARCH|cut -d'/' -f2`
      --insecure
      --single-snapshot
      --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-`date +%s`
