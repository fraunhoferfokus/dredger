# This file was initially generated by dredger, but feel free to adapt it to your needs and environment
FROM golang:alpine AS builder

RUN apk update && apk add --no-cache git ca-certificates && update-ca-certificates && apk add upx

WORKDIR /go/src/app
ENV USER=appuser
ENV UID=10001

RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "${UID}" \
    "${USER}"
COPY . .
# Fetch dependencies.
RUN go install github.com/a-h/templ/cmd/templ@latest
RUN go get -d -v ./...
# Build the binary
RUN templ generate web/pages/*.templ
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-w -s" -o /go/bin/app
RUN upx /go/bin/app

# build a image
FROM scratch
# Import from builder
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
COPY --from=builder /etc/passwd /etc/passwd
COPY --from=builder /etc/group /etc/group
COPY --from=builder /etc/nsswitch.conf /etc/nsswitch.conf
# Copy our static executable
COPY --from=builder /go/bin/app /go/bin/app
# Use an unprivileged user
USER appuser:appuser
EXPOSE {{ .Port }}
# Run the app binary
CMD ["/go/bin/app"]
